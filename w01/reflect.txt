/*

Full Name  : Chia-Yu Chien
Student ID#: 157049222
Email      : cchien8@myseneca.ca

I have done all the coding by myself and only copied the code that my professor provided to complete my workshops and assignments.
*/

    In this workshop, I learned how to organize my source code into modules, 
using header and implementation files. For example, I put one of my module 
ShoppingList into `ShoppingList.cpp` and `ShoppingList.h`. I separates the 
declaration and definition into different files. This approach  can do 
better organization of a codebase and increase the modularity.

    Second, I learned the process of compiling and linking a modular program. 
The workshop demonstrates how the compiler processes the header file and its 
definition and finally produce the executable binary file.

    In addition, I leveraged the `namespace` keyword to declare my functions 
inside the `seneca` namespace. With the help of namespace, we can prevent name 
conflict in a large project. It adds additional information to let the compiler 
differentiate functions, classes with the same name. Take the standard library 
as an example, it declares all the classes, functions in `std` namespace. Hence, 
when we write a C++ program we can do naming with no concern of name conflict 
with the naming of the standard library.

